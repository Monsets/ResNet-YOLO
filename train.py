from settings import Config
from model import build_model
from data_generator import DataGenerator

conf = Config()

model, callbacks = build_model(conf, (conf.resize_shape, conf.resize_shape, 3))


print('Using real-time data augmentation.')
# This will do preprocessing and realtime data augmentation:

with open('data/train_set.txt', 'r') as f:
    train = f.readlines()
with open('data/test_set.txt', 'r') as f:
    test = f.readlines()

traing = DataGenerator(train)
testg = DataGenerator(test)

# Fit the model on the batches generated by datagen.flow().
model.fit_generator(generator=traing,
                    validation_data=testg,
                    epochs=conf.epochs, verbose=1, workers=4,
                    callbacks=callbacks)

# Score trained model.
scores = model.evaluate((testg), verbose=1)
print('Test loss:', scores[0])
print('Test accuracy:', scores[1])